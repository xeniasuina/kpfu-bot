from aiogram import Router, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, InlineKeyboardMarkup

from keyboards.all_kb import *

start_router = Router()

@start_router.message(CommandStart()) # /start
async def cmd_start(message: Message):
    await message.answer('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! \n'
 '–Ø —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –Ω–∞—à–µ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏.\n'
 '–ò—Ç–∞–∫, –Ω–∞—á–Ω—ë–º!')

# @start_router.message(F.text == 'üìñ –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è') # üìñ –û—Ä–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# async def cmd_start_3(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '<b>–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –∏ –ø—Ä–∞–≤–∏–ª–∞</b>: –æ—Ç–≤–µ—Ç—ã –æ –¥—Ä–µ—Å—Å-–∫–æ–¥–µ, –≥—Ä–∞—Ñ–∏–∫–µ —Ä–∞–±–æ—Ç—ã, –ø—Ä–æ—Ü–µ–¥—É—Ä–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –±–æ–ª—å–Ω–∏—á–Ω—ã—Ö –∏ –æ—Ç–ø—É—Å–∫–æ–≤. \n'
#                          '<b>–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–∏</b>: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –æ—Ñ–∏—Å–∞, —Å—Ç–æ–ª–æ–≤–æ–π, –ø–∞—Ä–∫–æ–≤–∫–µ. \n'
#                          '<b>–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è</b>: –¥–æ—Å—Ç—É–ø –∫ –¥–æ–ª–∂–Ω–æ—Å—Ç–Ω—ã–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º, —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞–º, —à–∞–±–ª–æ–Ω–∞–º –∑–∞—è–≤–ª–µ–Ω–∏–π –∏ –æ—Ç—á–µ—Ç–æ–≤.' ,
#
#                          reply_markup=info_kb_1())
#
# @start_router.message(F.text == 'üìù –†–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã')
# async def rab_pr(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '<b>–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏</b>: –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–≤, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π, HR-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤.\n'
#                          '<b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</b>: –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é –∫ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–º —Å–∏—Å—Ç–µ–º–∞–º, –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è.',
#                          reply_markup=info_kb_2())
#
# @start_router.message(F.text == 'üì¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞')
# async def rab_obr(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '<b>–û–ø—Ä–æ—Å—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏</b>: —Ä–µ–≥—É–ª—è—Ä–Ω—ã–π —Å–±–æ—Ä –º–Ω–µ–Ω–∏–π –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏. \n'
#                          '<b>–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º</b>: –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ HR –∏–ª–∏ –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞–º. \n'
#                          '<b>–ú–æ—Ç–∏–≤–∞—Ü–∏—è</b>: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö, —Å–∏—Å—Ç–µ–º–µ –ø–æ–æ—â—Ä–µ–Ω–∏–π –∏ –∫–∞—Ä—å–µ—Ä–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö.',
#                          reply_markup=info_kb_3())
#
# @start_router.message(F.text == '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–æ–ª–∏—Ç–∏–∫–∞ –∏ –ø—Ä–∞–≤–∏–ª–∞') # üìñ –û—Ä–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# async def rab_pr_korp(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '1)–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å –±–æ–ª—å–Ω–∏—á–Ω—ã–π –ª–∏—Å—Ç –∏ –∫–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω—ã \n'
#                          '2)–ö–∞–∫–æ–≤–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–ø—É—Å–∫ –∏ —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –æ—Ç–ø—É—Å–∫–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è? \n'
#                          '3)–ö–∞–∫–æ–≤–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–æ–∫? \n'
#                          '4)–ì–¥–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª—å–≥–æ—Ç–∞—Ö –∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è—Ö –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤?',
#                          reply_markup=info_kb_1_1())
#
# @start_router.message(F.text == '–ò–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–∏') # üìñ –û—Ä–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# async def rab_pr_inf(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '1)–ö–∞–∫–æ–≤—ã –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞? \n'
#                          '2)–ê–¥—Ä–µ—Å–∞ –∏–Ω—Å—Ç–∏—Ç—É—Ç–æ–≤ –∏ –∫–æ—Ä–ø—É—Å–æ–≤. \n'
#                          '3)–ï—Å—Ç—å –ª–∏ —É –Ω–∞—Å –ø–∞—Ä–∫–æ–≤–∫–∞ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –∏ –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ? \n'
#                          '4)–ì–¥–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã —Å—Ç–æ–ª–æ–≤–∞—è –∏ –∫–∞—Ñ–µ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤?',
#                          reply_markup=info_kb_1_2())
#
# @start_router.message(F.text == '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è') # üìñ –û—Ä–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# async def rab_pr_doc(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —á–µ—Ç—ã—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '1)–ì–¥–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —à–∞–±–ª–æ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ? \n'
#                          '2)–ì–¥–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è –º–æ–µ–π –ø–æ–∑–∏—Ü–∏–∏? \n'
#                          '3)–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —Ä–µ–≥–ª–∞–º–µ–Ω—Ç–∞–º –∏ –ø–æ–ª–∏—Ç–∏–∫–µ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞? \n'
#                          '4)–ï—Å—Ç—å –ª–∏ —à–∞–±–ª–æ–Ω—ã –∑–∞—è–≤–ª–µ–Ω–∏–π –∏ –æ—Ç—á–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —è –º–æ–≥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?',
#                          reply_markup=info_kb_1_3())
#
# @start_router.message(F.text == '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–æ–ª–ª–µ–≥–∞–º–∏')
# async def rab_pr_vzaim(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '1)–ö–∞–∫ –Ω–∞–π—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–ª–ª–µ–≥ –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π? \n'
#                          '2)–ö –∫–æ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º, —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å HR?',
#                          reply_markup=info_kb_2_1())
#
# @start_router.message(F.text == '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞')
# async def rab_pr_tp(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '1)–ö–∞–∫ –Ω–∞–π—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–ª–ª–µ–≥ –∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π? \n'
#                          '2)–ö –∫–æ–º—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º, —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å HR?',
#                          reply_markup=info_kb_2_2())
#
# @start_router.message(F.text == '–û–ø—Ä–æ—Å—ã —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–Ω–æ—Å—Ç–∏')
# async def rab_pr_opros(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '1)–ö–∞–∫ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ—Ü–µ–Ω–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤? \n'
#                          '2)–ï—Å—Ç—å –ª–∏ –∞–Ω–æ–Ω–∏–º–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏?',
#                          reply_markup=info_kb_3_1())
#
# @start_router.message(F.text == '–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º') # üìñ –û—Ä–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# async def rab_pr_problem(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '1)–ö—É–¥–∞ –º–Ω–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è, –µ—Å–ª–∏ —É –º–µ–Ω—è –≤–æ–∑–Ω–∏–∫–ª–∞ —Å–ª–æ–∂–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è –Ω–∞ —Ä–∞–±–æ—Ç–µ? \n'
#                          '2)–ì–¥–µ –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤ –æ —Ä–∞–±–æ—Ç–µ –≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ? \n'
#                          '3)–ö–∞–∫ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ HR-–æ—Ç–¥–µ–ª –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏?',
#                          reply_markup=info_kb_3_2())
#
# @start_router.message(F.text == '–ú–æ—Ç–∏–≤–∞—Ü–∏—è') # üìñ –û—Ä–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
# async def rab_pr_motiv(message: Message):
#     await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ \n'
#                          '1)–ö–∞–∫–∏–µ –∫—É—Ä—Å—ã –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞? \n'
#                          '2)–ì–¥–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å–µ? \n'
#                          '3)–ö–∞–∫ —É–∑–Ω–∞—Ç—å –æ –≤–∞–∫–∞–Ω—Å–∏—è—Ö –≤–Ω—É—Ç—Ä–∏ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞?',
#                          reply_markup=info_kb_3_3())
